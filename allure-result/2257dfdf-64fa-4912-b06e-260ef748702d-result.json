{"name": "test_search", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF64689B645+29573]\n\t(No symbol) [0x00007FF646810470]\n\t(No symbol) [0x00007FF6466CB6EA]\n\t(No symbol) [0x00007FF6466D22BE]\n\t(No symbol) [0x00007FF6466D4637]\n\t(No symbol) [0x00007FF6466D46F0]\n\t(No symbol) [0x00007FF6467273D9]\n\t(No symbol) [0x00007FF646724F3C]\n\t(No symbol) [0x00007FF646722408]\n\t(No symbol) [0x00007FF64672161A]\n\t(No symbol) [0x00007FF6467136BE]\n\t(No symbol) [0x00007FF6467472FA]\n\t(No symbol) [0x00007FF646712FF6]\n\t(No symbol) [0x00007FF646747510]\n\t(No symbol) [0x00007FF6467686BC]\n\t(No symbol) [0x00007FF6467470A3]\n\t(No symbol) [0x00007FF6467112DF]\n\t(No symbol) [0x00007FF646712441]\n\tGetHandleVerifier [0x00007FF646BCC58D+3375821]\n\tGetHandleVerifier [0x00007FF646C17987+3684039]\n\tGetHandleVerifier [0x00007FF646C0CDAB+3640043]\n\tGetHandleVerifier [0x00007FF64695B7C6+816390]\n\t(No symbol) [0x00007FF64681B77F]\n\t(No symbol) [0x00007FF6468175A4]\n\t(No symbol) [0x00007FF646817740]\n\t(No symbol) [0x00007FF64680659F]\n\tBaseThreadInitThunk [0x00007FF9FD30257D+29]\n\tRtlUserThreadStart [0x00007FF9FF2EAF28+40]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"af28026d69518d293bb96d0072ecd5b1\")>\n\n    def test_search(driver):\n    \n        uipage = UiPage(driver)\n        uipage.set_cookie_policy()\n    \n        # ввод разных значений в строку \"Поиск\"\n        isFound = uipage.search('Анна Каренина')\n        assert isFound == True\n    \n        isFound = uipage.search('Beautifull girl')\n        assert isFound == True\n    \n        isFound = uipage.search('ГОГОЛЬ')\n        assert isFound == True\n    \n        isFound = uipage.search('михаил лабковский')\n        assert isFound == True\n    \n        isFound = uipage.search('2021')\n        assert isFound == True\n    \n        isFound = uipage.search('ответ }{*?,/')\n        assert isFound == True\n    \n        # добавление в корзину\n        uipage.search('Магия утра')\n>       count_in_cart = uipage.AddToCart()\n\ntest_test_ui.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\ui_class.py:34: in AddToCart\n    results[0].click()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000166A8427F80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF64680659F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9FD30257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9FF2EAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=129.0.6668.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF64689B645+29573]\nE       \t(No symbol) [0x00007FF646810470]\nE       \t(No symbol) [0x00007FF6466CB6EA]\nE       \t(No symbol) [0x00007FF6466D22BE]\nE       \t(No symbol) [0x00007FF6466D4637]\nE       \t(No symbol) [0x00007FF6466D46F0]\nE       \t(No symbol) [0x00007FF6467273D9]\nE       \t(No symbol) [0x00007FF646724F3C]\nE       \t(No symbol) [0x00007FF646722408]\nE       \t(No symbol) [0x00007FF64672161A]\nE       \t(No symbol) [0x00007FF6467136BE]\nE       \t(No symbol) [0x00007FF6467472FA]\nE       \t(No symbol) [0x00007FF646712FF6]\nE       \t(No symbol) [0x00007FF646747510]\nE       \t(No symbol) [0x00007FF6467686BC]\nE       \t(No symbol) [0x00007FF6467470A3]\nE       \t(No symbol) [0x00007FF6467112DF]\nE       \t(No symbol) [0x00007FF646712441]\nE       \tGetHandleVerifier [0x00007FF646BCC58D+3375821]\nE       \tGetHandleVerifier [0x00007FF646C17987+3684039]\nE       \tGetHandleVerifier [0x00007FF646C0CDAB+3640043]\nE       \tGetHandleVerifier [0x00007FF64695B7C6+816390]\nE       \t(No symbol) [0x00007FF64681B77F]\nE       \t(No symbol) [0x00007FF6468175A4]\nE       \t(No symbol) [0x00007FF646817740]\nE       \t(No symbol) [0x00007FF64680659F]\nE       \tBaseThreadInitThunk [0x00007FF9FD30257D+29]\nE       \tRtlUserThreadStart [0x00007FF9FF2EAF28+40]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "stdout", "source": "e576a6a6-b8b5-424d-82ba-1c1027a2f56f-attachment.txt", "type": "text/plain"}], "start": 1728236186498, "stop": 1728236218113, "uuid": "92b82147-d55b-4d21-819e-cd64ae4ab34f", "historyId": "aeb14d7f367ba6ff683894f14f1ceb72", "testCaseId": "aeb14d7f367ba6ff683894f14f1ceb72", "fullName": "test_test_ui#test_search", "labels": [{"name": "suite", "value": "test_test_ui"}, {"name": "host", "value": "Ekaterina"}, {"name": "thread", "value": "27064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_test_ui"}]}